name: Build Images

on:
  workflow_dispatch: {}
  push: 
    branches: ["main"]

env:
  # Use ghcr.io to store container images
  REGISTRY: ghcr.io


jobs:

  build-image:
    runs-on: ubuntu-latest
    outputs:  #declare image digest as output, to feed it to next job
      container_image_digest: ${{ steps.build-and-push.outputs.digest }}

    permissions:
      contents: write
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4.2.2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3.7.1

    - name: Log into registry ghcr.io
      uses: docker/login-action@v3.4.0
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        logout: false

    - name: Extract Docker metadata
      uses: docker/metadata-action@v5.7.0
      id: meta
      with:
        images: ${{ env.REGISTRY }}/${{ github.repository }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v6.15.0
      id: build-and-push
      with:
        tags: ${{ steps.meta.outputs.tags }}, ${{ env.REGISTRY }}/${{ github.repository }}:latest
        annotations: ${{ steps.meta.outputs.annotations }}
        push: true
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        # provenance: true
        # sbom: true
        

  generate-attestations:
    needs: build-image

    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write
      id-token: write
      attestations: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4.2.2

    - name: Log into registry ghcr.io
      uses: docker/login-action@v3.4.0
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        logout: false

    - name: Attest Provenance
      uses: actions/attest-build-provenance@v2.2.3
      id: attest-provenance
      with:
        subject-name: ${{ env.REGISTRY }}/${{ github.repository }}
        subject-digest: ${{ needs.build-image.outputs.container_image_digest }}
        push-to-registry: true
  
    - name: Generate SBOM
      uses: anchore/sbom-action@v0
      with:
        image: ${{ env.REGISTRY }}/${{ github.repository }}:latest
        format: 'cyclonedx-json'
        output-file: 'sbom.cyclonedx.json'

    - name: Attest SBOM
      uses: actions/attest-sbom@v2
      id: attest-sbom
      with:
        subject-name: ${{ env.REGISTRY }}/${{ github.repository }}
        subject-digest: ${{ needs.build-image.outputs.container_image_digest }}
        sbom-path: 'sbom.cyclonedx.json'
        push-to-registry: true





